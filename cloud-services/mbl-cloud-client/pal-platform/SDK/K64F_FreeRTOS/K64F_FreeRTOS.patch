diff --git a/K64F_FreeRTOS/Middleware/mbedtls/CMakeLists.txt b/K64F_FreeRTOS/Middleware/mbedtls/CMakeLists.txt
index 3e47224..166c5ae 100644
--- a/K64F_FreeRTOS/Middleware/mbedtls/CMakeLists.txt
+++ b/K64F_FreeRTOS/Middleware/mbedtls/CMakeLists.txt
@@ -58,26 +58,27 @@ set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE}
 
 string(REGEX MATCH "Clang" CMAKE_COMPILER_IS_CLANG "${CMAKE_C_COMPILER_ID}")
 
-if(CMAKE_COMPILER_IS_GNUCC)
-    # some warnings we want are not available with old GCC versions
-    # note: starting with CMake 2.8 we could use CMAKE_C_COMPILER_VERSION
-    execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpversion
-                    OUTPUT_VARIABLE GCC_VERSION)
-    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -W -Wdeclaration-after-statement -Wwrite-strings")
-    if (GCC_VERSION VERSION_GREATER 4.5 OR GCC_VERSION VERSION_EQUAL 4.5)
-        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wlogical-op")
-    endif()
-    if (GCC_VERSION VERSION_GREATER 4.8 OR GCC_VERSION VERSION_EQUAL 4.8)
-        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wshadow")
-    endif()
-    set(CMAKE_C_FLAGS_RELEASE     "-O2")
-    set(CMAKE_C_FLAGS_DEBUG       "-O0 -g3")
-    set(CMAKE_C_FLAGS_COVERAGE    "-O0 -g3 --coverage")
-    set(CMAKE_C_FLAGS_ASAN        "-Werror -fsanitize=address -fno-common -O3")
-    set(CMAKE_C_FLAGS_ASANDBG     "-Werror -fsanitize=address -fno-common -O1 -g3 -fno-omit-frame-pointer -fno-optimize-sibling-calls ")
-    set(CMAKE_C_FLAGS_CHECK       "-Werror -Os")
-    set(CMAKE_C_FLAGS_CHECKFULL   "${CMAKE_C_FLAGS_CHECK} -Wcast-qual")
-endif(CMAKE_COMPILER_IS_GNUCC)
+
+#if(CMAKE_COMPILER_IS_GNUCC)
+#    # some warnings we want are not available with old GCC versions
+#    # note: starting with CMake 2.8 we could use CMAKE_C_COMPILER_VERSION
+#    execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpversion
+#                    OUTPUT_VARIABLE GCC_VERSION)
+#    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -W -Wdeclaration-after-statement -Wwrite-strings")
+#    if (GCC_VERSION VERSION_GREATER 4.5 OR GCC_VERSION VERSION_EQUAL 4.5)
+#        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wlogical-op")
+#    endif()
+#    if (GCC_VERSION VERSION_GREATER 4.8 OR GCC_VERSION VERSION_EQUAL 4.8)
+#        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wshadow")
+#    endif()
+#    set(CMAKE_C_FLAGS_RELEASE     "-O2")
+#    set(CMAKE_C_FLAGS_DEBUG       "-O0 -g3")
+#    set(CMAKE_C_FLAGS_COVERAGE    "-O0 -g3 --coverage")
+#    set(CMAKE_C_FLAGS_ASAN        "-Werror -fsanitize=address -fno-common -O3")
+#    set(CMAKE_C_FLAGS_ASANDBG     "-Werror -fsanitize=address -fno-common -O1 -g3 -fno-omit-frame-pointer -fno-optimize-sibling-calls ")
+#    set(CMAKE_C_FLAGS_CHECK       "-Werror -Os")
+#    set(CMAKE_C_FLAGS_CHECKFULL   "${CMAKE_C_FLAGS_CHECK} -Wcast-qual")
+#endif(CMAKE_COMPILER_IS_GNUCC)
 
 if(CMAKE_COMPILER_IS_CLANG)
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -W -Wdeclaration-after-statement -Wwrite-strings -Wpointer-arith -Wimplicit-fallthrough -Wshadow")
