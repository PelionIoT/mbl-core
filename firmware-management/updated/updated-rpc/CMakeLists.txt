# Copyright (c) 2020 Arm Limited and Contributors. All rights reserved.
#
# SPDX-License-Identifier: BSD-3-Clause

cmake_minimum_required(VERSION 3.5)

# We don't want static analysis on this project as protobuf produces
# warnings which aren't our responsibility to fix here.
set(CMAKE_CXX_CLANG_TIDY "")

# The "protoc" program is used to translate .proto files into code
find_program(PROTOC protoc)

# grpc_cpp_plugin is used by protoc to generate C++ code.
find_program(GRPC_PLUGIN grpc_cpp_plugin)

include(FindProtobuf)
find_package(Protobuf REQUIRED)

# Non generated source files
set(UPDATED_RPC_NON_GEN_SRC
    "${CMAKE_CURRENT_SOURCE_DIR}/source/config.cpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/source/Error.cpp"
)

# Generate protobuf and grpc source from our .proto file
set(UPDATED_RPC_PROTO_PATH "${CMAKE_CURRENT_SOURCE_DIR}/source/proto")
set(UPDATED_RPC_PROTO "${UPDATED_RPC_PROTO_PATH}/updated-rpc.proto")

# This is the destination dir for the files that protoc will generate. protoc
# will generate .cc files as well as .h files... The .cc files shouldn't really
# live in this "include" directory but they're not doing much harm at the
# moment.
set(UPDATED_RPC_GEN_DEST "${CMAKE_CURRENT_BINARY_DIR}/include/updated-rpc")

# .cc files that "protoc" will generate from the proto file
set(UPDATED_RPC_GEN_CC
    "${UPDATED_RPC_GEN_DEST}/updated-rpc.pb.cc"
    "${UPDATED_RPC_GEN_DEST}/updated-rpc.grpc.pb.cc")
# .h files that "protoc" will generate from the proto file
set(UPDATED_RPC_GEN_H
    "${UPDATED_RPC_GEN_DEST}/updated-rpc.pb.h"
    "${UPDATED_RPC_GEN_DEST}/updated-rpc.grpc.pb.h")

# The rule to generate our protobuf/grpc source files
add_custom_command(
    OUTPUT ${UPDATED_RPC_GEN_CC} ${UPDATED_RPC_GEN_H}
    COMMAND "${PROTOC}"
    ARGS --grpc_out "${UPDATED_RPC_GEN_DEST}"
         --cpp_out "${UPDATED_RPC_GEN_DEST}"
         -I "${UPDATED_RPC_PROTO_PATH}"
         --plugin=protoc-gen-grpc="${GRPC_PLUGIN}"
         "${UPDATED_RPC_PROTO}"
    DEPENDS "${UPDATED_RPC_PROTO}")

set(UPDATED_RPC_SRC ${UPDATED_RPC_GEN_CC} ${UPDATED_RPC_NON_GEN_SRC})

add_library(updated-rpc ${UPDATED_RPC_SRC})

target_include_directories(updated-rpc PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include")
target_include_directories(updated-rpc PUBLIC "${CMAKE_CURRENT_BINARY_DIR}/include")

target_link_libraries(updated-rpc common_compile_options)
target_link_libraries(updated-rpc ${PROTOBUF_LIBRARY})
target_link_libraries(updated-rpc grpc++)

# DON'T USE THIS:
#
#   target_link_libraries(updated-rpc common_compile_warnings)
#
# The code generated by "protoc" would cause warnings, but it's not our code to
# fix.

#set_target_properties(updated-rpc PROPERTIES LINKER_LANGUAGE CXX)
